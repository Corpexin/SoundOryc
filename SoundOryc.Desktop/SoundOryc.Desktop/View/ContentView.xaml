<UserControl x:Class="SoundOryc.Desktop.View.ContentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:model="clr-namespace:SoundOryc.Desktop.ViewModel"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ctrl="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             DataContext="{Binding Content, Source={StaticResource Locator}}"
             mc:Ignorable="d" 
             MinWidth="580"
             MinHeight="360">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="Resources.xaml" />
                <ResourceDictionary>
                    <BooleanToVisibilityConverter x:Key="boolToVis" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="128"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="14*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#898c88" Visibility="{Binding isContentVisibleUp, Converter={StaticResource boolToVis}}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Margin="40,24,40,0" />
        <Button x:Name="btnSongs" Visibility="{Binding isContentVisibleUp, Converter={StaticResource boolToVis}}" Style="{StaticResource ButtonSelectSearchType}" IsEnabled="{Binding songsEnabled}" Grid.Row="0" Grid.Column="1" FontSize="13" FontWeight="Thin" Content="songs"  ClickMode="Press" Width="70" Height="25" HorizontalAlignment="Right" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="10,2,10,5" UseLayoutRounding="False" Command="{Binding songsClick}" Margin="0,0,25,0" />
        <Button x:Name="btnArtists" Visibility="{Binding isContentVisibleUp, Converter={StaticResource boolToVis}}" Style="{StaticResource ButtonSelectSearchType}"  IsEnabled="{Binding artistsEnabled}" Grid.Row="0" Grid.Column="2" FontSize="13" FontWeight="Thin" Content="artists"  ClickMode="Press" Height="25" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="10,2,10,5" UseLayoutRounding="False" Command="{Binding artistsClick}" Margin="31,0,34,0" />
        <Button x:Name="btnAlbums" Visibility="{Binding isContentVisibleUp, Converter={StaticResource boolToVis}}" Style="{StaticResource ButtonSelectSearchType}"  IsEnabled="{Binding albumsEnabled}" Grid.Row="0" Grid.Column="3" FontSize="13" FontWeight="Thin" Content="albums"  ClickMode="Press" Width="67" Height="25" HorizontalAlignment="Right" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="10,2,10,5" UseLayoutRounding="False" Command="{Binding albumsClick}" Margin="0,-0.066,25,0.065" />
        <Label x:Name="lblPlaylistName" Visibility="{Binding isContentPlaylistVisible, Converter={StaticResource boolToVis}}" Content="{Binding playlistName}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="4" Foreground="#FF898C88"   Background="Transparent" FontWeight="Thin" ClipToBounds="True" FontSize="13" />
        <ListView x:Name="lvSongs" Background="Transparent"  ctrl:ListViewLayoutManager.Enabled="true" Grid.Column="0"  Grid.Row="1"  Margin="0, 5, 0, 0" VerticalContentAlignment="Stretch" Grid.ColumnSpan="5" BorderBrush="{x:Null}"  ItemContainerStyle="{DynamicResource CustomListViewItemStyle}" AllowDrop="True" ItemsSource="{Binding songsList}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <command:EventToCommand Command="{Binding addQueueAlone}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <command:EventToCommand  Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=lvSongs}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ContextMenu>
                <ContextMenu x:Name="menu" Visibility="{Binding isContextmenuVisible, Converter={StaticResource boolToVis}}" >
                    <MenuItem x:Name="addQueue" Header="Add to Queue"  Background="WhiteSmoke" Command="{Binding addQueue}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                    </MenuItem>
                    <MenuItem x:Name="addPlaylist"  Header="Add to Playlist" Visibility="{Binding isAddPlaylistMIVisible, Converter={StaticResource boolToVis}}" Command="{Binding Path=DataContext.addPlaylist, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke"  >
                        <MenuItem x:Name="createNew"  Header="Create new..." Command="{Binding Path=DataContext.createNew, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke" />
                    </MenuItem>
                    <MenuItem x:Name="deleteSong"  Header="Delete from Playlist" Visibility="{Binding isDeleteSongMIVisible, Converter={StaticResource boolToVis}}"  Command="{Binding deleteSongFromPlayList}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"  />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View >
                <GridView  ColumnHeaderContainerStyle="{StaticResource myHeaderStyle}">
                    <GridViewColumn  ctrl:ProportionalColumn.Width="1"  DisplayMemberBinding="{Binding numList}" />
                    <GridViewColumn  ctrl:ProportionalColumn.Width="4" DisplayMemberBinding="{Binding songName}" />
                    <GridViewColumn  ctrl:ProportionalColumn.Width="4" DisplayMemberBinding="{Binding artistName}" />
                    <GridViewColumn  ctrl:ProportionalColumn.Width="2" DisplayMemberBinding="{Binding duration}" />
                    <GridViewColumn  ctrl:ProportionalColumn.Width="1">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image x:Name="downloadImage" Source="/Resources/cloud-computing.png" Width="18" Height="18"  ToolTip="Generate download link" >
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <DropShadowEffect ShadowDepth="0" Color="LightGray" Opacity="0.70" BlurRadius="5"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>

        </ListView>

        <Button x:Name="loadNextListButton" Visibility="{Binding isContentVisible, Converter={StaticResource boolToVis}}"  Style="{StaticResource ButtonStyle}" Grid.Row="2" Margin="76,4,34,3"  BorderBrush="Transparent" Padding="0,0,0,0" BorderThickness="0,0,0,0" FontSize="1" IsEnabled="True"  MinHeight="1"  ToolTip="Next search page" RenderTransformOrigin="0.45,1.625" Grid.Column="2"  Width="10" Content="{DynamicResource loadNextButton}"/>

        <Button x:Name="loadPrevListButton" Visibility="{Binding isContentVisible, Converter={StaticResource boolToVis}}" Style="{StaticResource ButtonStyle}" Grid.Row="2" Margin="0,4,80,3"  BorderBrush="Transparent" Padding="0,0,0,0" BorderThickness="0,0,0,0" FontSize="1" IsEnabled="True"  MinHeight="1"   ToolTip="Previous search page" RenderTransformOrigin="0.45,1.625" Grid.Column="2" HorizontalAlignment="Right" Width="10"  Content="{DynamicResource loadPrevButton}"  />

        <Label  x:Name="lblPage" Content="{Binding lblPageContent}" Visibility="{Binding isContentVisible, Converter={StaticResource boolToVis}}" Grid.Column="2" Grid.Row="2" FontFamily="Arial Unicode MS" Foreground="#FF898C88"   Background="Transparent" ClipToBounds="True" FontSize="10" HorizontalContentAlignment="Center" Margin="0,0,51,0" HorizontalAlignment="Right" Width="29"/>
    </Grid>
</UserControl>